(defAlias &ident Stream kiss.Stream)
(defAlias &type Stream kiss.Stream)

(defMacro makeExample [expression &body b]
    `(let [normal ,(printExp expression)
            expanded ,(printExp (macroExpand expression))]
        ,@b))

(defMacro makeExampleNoValues [expression]
    `{
        ,(printExp expression)
        ,(printExp (macroExpand expression))
    })

(function _testAllForms []
    // object
    (makeExample
        (object
            Stream (Stream.fromString ""))
        normal.Stream
        expanded.Stream)

    // lambda
    (makeExample
        (lambda [Stream] (Stream.fromString ""))
        (normal null)
        (expanded null))

    (makeExample
        (lambda [:Stream s] (Stream.fromString ""))
        (normal null)
        (expanded null))

    // localVar
    (makeExampleNoValues
        (localVar Stream (Stream.fromString "")))

    (makeExampleNoValues
        (localVar :Stream s (Stream.fromString "")))

    )